version: "3.9"

#
# ATLAS
#

x-default-environment: &default_environment
  TZ: ${TZ}
  PUID: ${PUID}
  PGID: ${PGID}

x-default-task: &default_task
  environment:
    <<: *default_environment
  network_mode: none
  restart: "no"

x-default-service: &default_service
  environment: &default_service_environment
    <<: *default_environment
    UMASK: ${UMASK}
  restart: always

services:

  #
  # Services.
  #

  #  adminer:
  #    image: adminer
  #    container_name: adminer
  #    networks:
  #      - outside
  #      - authelia_db
  #      - nextcloud_db
  #      - teamspeak_db
  #    ports:
  #      - "8080:8080"

  authelia-init:
    <<: *default_task
    image: atlas/authelia-init
    build: ./images/authelia-init
    container_name: authelia-init
    volumes:
      - authelia:/config:z

  authelia:
    <<: *default_service
    image: authelia/authelia:${AUTHELIA}
    container_name: authelia
    depends_on:
      authelia-init:
        condition: service_completed_successfully
      authelia-db:
        condition: service_started
    networks:
      - auth
      - authelia_db
      - mail
    environment:
      <<: *default_service_environment
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE: /run/secrets/ldap_auth
      AUTHELIA_IDENTITY_PROVIDERS_OIDC_HMAC_SECRET_FILE: /run/secrets/authelia_identity_hmac
      AUTHELIA_JWT_SECRET_FILE: /run/secrets/authelia_jwt
      AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE: /run/secrets/protonmail_password_bridge
      AUTHELIA_SESSION_SECRET_FILE: /run/secrets/authelia_session
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: /run/secrets/authelia_storage
      AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE: /run/secrets/authelia_db
    volumes:
      - authelia:/config:z
    secrets:
      - authelia_db
      - authelia_identity_hmac
      - authelia_jwt
      - authelia_session
      - authelia_storage
      - ldap_auth
      - protonmail_password_bridge
    labels:
      - com.centurylinklabs.watchtower.enable=true

  authelia-db:
    <<: *default_service
    image: linuxserver/mariadb:${MARIADB}
    container_name: authelia-db
    networks:
      - authelia_db
    environment:
      <<: *default_service_environment
      MYSQL_DATABASE: authelia
      MYSQL_USER: authelia
      FILE__MYSQL_PASSWORD: /run/secrets/authelia_db
      FILE__MYSQL_ROOT_PASSWORD: /run/secrets/authelia_db
    volumes:
      - authelia_db:/config:z
    secrets:
      - authelia_db
    labels:
      - com.centurylinklabs.watchtower.enable=true

  inadyn:
    <<: *default_service
    image: atlas/inadyn:${INADYN}
    build: ./images/inadyn
    container_name: inadyn
    networks:
      - outside
    secrets:
      - inadyn

  ldap-init:
    <<: *default_task
    image: atlas/ldap-init
    build: ./images/ldap-init
    container_name: ldap-init
    volumes:
      - ldap:/config:z

  ldap:
    <<: *default_service
    image: atlas/ldap:${LDAP}
    build: ./images/ldap
    container_name: ldap
    depends_on:
      ldap-init:
        condition: service_completed_successfully
    networks:
      - auth
    environment:
      <<: *default_service_environment
      DOMAIN: ${DOMAIN}
      LDAP_ROOT: root
      LDAP_BIND_USER: auth
      FILE__LDAP_CONFIG_PASSWORD: /run/secrets/ldap_db
      FILE__LDAP_ROOT_PASSWORD: /run/secrets/ldap_db
      FILE__LDAP_BIND_PASSWORD: /run/secrets/ldap_auth
    volumes:
      - ldap:/config:z
    secrets:
      - ldap_auth
      - ldap_db
    ulimits:
      nofile: 1024

  nextcloud:
    <<: *default_service
    image: linuxserver/nextcloud:${NEXTCLOUD}
    container_name: nextcloud
    depends_on:
      - nextcloud-db
    networks:
      - auth
      - mail
      - nextcloud_db
      - proxy
    volumes:
      - nextcloud:/config:z
      - ${VOLUME_NEXTCLOUD}:/data:z
      - ${VOLUME_MEDIA}:/media:z
      - ${VOLUME_POOL}:/pool:z
      - ${VOLUME_SYNC}:/sync:z
    labels:
      - com.centurylinklabs.watchtower.enable=true

  nextcloud-db:
    <<: *default_service
    image: linuxserver/mariadb:${MARIADB}
    container_name: nextcloud-db
    networks:
      - nextcloud_db
    environment:
      <<: *default_service_environment
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      FILE__MYSQL_PASSWORD: /run/secrets/nextcloud_db
      FILE__MYSQL_ROOT_PASSWORD: /run/secrets/nextcloud_db
    volumes:
      - nextcloud_db:/config:z
    secrets:
      - nextcloud_db
    labels:
      - com.centurylinklabs.watchtower.enable=true

  plex:
    <<: *default_service
    image: linuxserver/plex:${PLEX}
    container_name: plex
    networks:
      - proxy
    deploy:
      resources:
        limits:
          memory: 8G
    volumes:
      - plex:/config:z
      - ${VOLUME_MEDIA}:/data:z
    labels:
      - com.centurylinklabs.watchtower.enable=true

  proton-bridge:
    <<: *default_service
    image: atlas/proton-bridge:${PROTON_BRIDGE}
    build: ./images/proton-bridge
    container_name: proton-bridge
    networks:
      - mail
    environment:
      <<: *default_service_environment
      FILE__PROTONMAIL_ADDRESS: /run/secrets/protonmail_address
      FILE__PROTONMAIL_PASSWORD: /run/secrets/protonmail_password
      FILE__PROTONMAIL_PASSWORD_MAILBOX: /run/secrets/protonmail_password_mailbox
    volumes:
      - proton-bridge:/config:z
    secrets:
      - protonmail_address
      - protonmail_password
      - protonmail_password_mailbox

  swag-init:
    <<: *default_task
    image: atlas/swag-init
    build: ./images/swag-init
    container_name: swag-init
    volumes:
      - swag:/config:z

  swag:
    <<: *default_service
    image: linuxserver/swag:${SWAG}
    container_name: swag
    depends_on:
      swag-init:
        condition: service_completed_successfully
    cap_add:
      - NET_ADMIN
    networks:
      - outside
      - auth
      - proxy
    ports:
      - "80:80"
      - "443:443"
    environment:
      <<: *default_service_environment
      URL: ${DOMAIN}
      SUBDOMAINS: wildcard
      VALIDATION: dns
      DNSPLUGIN: cloudflare
      FILE__MAXMINDDB_LICENSE_KEY: /run/secrets/maxmind
    volumes:
      - swag:/config:z
    secrets:
      - cloudflare
      - maxmind
    labels:
      - com.centurylinklabs.watchtower.enable=true

  syncthing:
    <<: *default_service
    image: linuxserver/syncthing:${SYNCTHING}
    container_name: syncthing
    networks:
      - outside
      - proxy
    ports:
      - "22000:22000"
      - "21027:21027/udp"
    volumes:
      - syncthing:/config:z
      - ${VOLUME_SYNC}:/data1:z
    labels:
      - com.centurylinklabs.watchtower.enable=true

  teamspeak:
    <<: *default_service
    image: teamspeak:${TEAMSPEAK}
    container_name: teamspeak
    depends_on:
      - teamspeak-db
    networks:
      - outside
      - teamspeak_db
    ports:
      - "9987:9987/udp"
      - "10011:10011"
      - "30033:30033"
    environment:
      <<: *default_service_environment
      TS3SERVER_DB_PLUGIN: ts3db_mariadb
      TS3SERVER_DB_SQLCREATEPATH: create_mariadb
      TS3SERVER_DB_HOST: teamspeak-db
      TS3SERVER_DB_USER: teamspeak
      TS3SERVER_DB_PASSWORD_FILE: /run/secrets/teamspeak_db
      TS3SERVER_DB_NAME: teamspeak
      TS3SERVER_DB_WAITUNTILREADY: 30
      TS3SERVER_LICENSE: accept
    volumes:
      - teamspeak:/var/ts3server:z
    secrets:
      - teamspeak_db
    labels:
      - com.centurylinklabs.watchtower.enable=true

  teamspeak-db:
    <<: *default_service
    image: linuxserver/mariadb:${MARIADB}
    container_name: teamspeak-db
    networks:
      - teamspeak_db
    environment:
      <<: *default_service_environment
      MYSQL_DATABASE: teamspeak
      MYSQL_USER: teamspeak
      FILE__MYSQL_PASSWORD: /run/secrets/teamspeak_db
      FILE__MYSQL_ROOT_PASSWORD: /run/secrets/teamspeak_db
    volumes:
      - teamspeak_db:/config:z
    secrets:
      - teamspeak_db
    labels:
      - com.centurylinklabs.watchtower.enable=true

  udpxy:
    <<: *default_service
    image: atlas/udpxy:${UDPXY}
    build: ./images/udpxy
    container_name: udpxy
    network_mode: host

  watchtower:
    <<: *default_service
    image: containrrr/watchtower
    container_name: watchtower
    networks:
      - outside
    environment:
      <<: *default_service_environment
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_INCLUDE_RESTARTING: "true"
      WATCHTOWER_LABEL_ENABLE: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "true"
      WATCHTOWER_NOTIFICATIONS_LEVEL: error
      WATCHTOWER_SCHEDULE: 0 0 6 * * *
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - com.centurylinklabs.watchtower.enable=true

  #
  # Backup.
  #

  restic:
    <<: *default_service
    image: atlas/restic:${RESTIC}
    build: ./images/restic
    container_name: restic
    networks:
      - outside
    environment:
      <<: *default_service_environment
      RESTIC_REPOSITORY: <empty>
      RESTIC_SCHEDULE: 30 3 * * *
      RESTIC_BACKUP_TAGS: auto
      RESTIC_FORGET_ARGS: --prune --keep-daily 7 --keep-weekly 4 --keep-monthly 3 --keep-yearly 1
      FILE__B2_ACCOUNT_ID: /run/secrets/backblaze_id
      FILE__B2_ACCOUNT_KEY: /run/secrets/backblaze_key
      FILE__RESTIC_PASSWORD: /run/secrets/restic
    volumes:
      - restic:/config:z
      # Volumes
      - authelia_db_backup:/data/authelia_db:z
      - nextcloud:/data/nextcloud:z
      - nextcloud_db_backup:/data/nextcloud_db:z
      - ldap:/data/ldap:z
      - plex:/data/plex:z
      - proton-bridge:/data/proton-bridge:z
      - swag:/data/swag:z
      - syncthing:/data/syncthing:z
      - teamspeak:/data/teamspeak:z
      - teamspeak_db_backup:/data/teamspeak_db:z
      # Data
      - ${VOLUME_ROOT}:/data/data:z
    secrets:
      - backblaze_id
      - backblaze_key
      - restic

  authelia-db-backup:
    <<: *default_service
    image: ctor/db-backup:${DB_BACKUP}
    build: ./images/db-backup
    container_name: authelia-db-backup
    networks:
      - authelia_db
    environment:
      <<: *default_service_environment
      DB_BACKUP_SCHEDULE: 00 2 * * *
      DB_HOST: authelia-db
      DB_USER: authelia
      DB_NAME: authelia
      FILE__DB_PASSWORD: /run/secrets/authelia_db
    volumes:
      - authelia_db_backup:/config:z
    secrets:
      - authelia_db

  nextcloud-db-backup:
    <<: *default_service
    image: ctor/db-backup:${DB_BACKUP}
    build: ./images/db-backup
    container_name: nextcloud-db-backup
    networks:
      - nextcloud_db
    environment:
      <<: *default_service_environment
      DB_BACKUP_SCHEDULE: 00 2 * * *
      DB_HOST: nextcloud-db
      DB_USER: nextcloud
      DB_NAME: nextcloud
      FILE__DB_PASSWORD: /run/secrets/nextcloud_db
    volumes:
      - nextcloud_db_backup:/config:z
    secrets:
      - nextcloud_db

  teamspeak-db-backup:
    <<: *default_service
    image: ctor/db-backup:${DB_BACKUP}
    build: ./images/db-backup
    container_name: teamspeak-db-backup
    networks:
      - teamspeak_db
    environment:
      <<: *default_service_environment
      DB_BACKUP_SCHEDULE: 00 2 * * *
      DB_HOST: teamspeak-db
      DB_USER: teamspeak
      DB_NAME: teamspeak
      FILE__DB_PASSWORD: /run/secrets/teamspeak_db
    volumes:
      - teamspeak_db_backup:/config:z
    secrets:
      - teamspeak_db

volumes:
  authelia:
  authelia_db:
  authelia_db_backup:
  ldap:
  nextcloud:
  nextcloud_db:
  nextcloud_db_backup:
  plex:
  proton-bridge:
  restic:
  swag:
  syncthing:
  teamspeak:
  teamspeak_db:
  teamspeak_db_backup:

networks:
  outside:
    external: true
    name: atlas_outside
  auth:
  mail:
  proxy:
  authelia_db:
  nextcloud_db:
  teamspeak_db:

secrets:
  authelia_db:
    file: ./secrets/authelia_db
  authelia_identity_hmac:
    file: ./secrets/authelia_identity_hmac
  authelia_jwt:
    file: ./secrets/authelia_jwt
  authelia_session:
    file: ./secrets/authelia_session
  authelia_storage:
    file: ./secrets/authelia_storage
  backblaze_id:
    file: ./secrets/backblaze_id
  backblaze_key:
    file: ./secrets/backblaze_key
  cloudflare:
    file: ./secrets/cloudflare
  inadyn:
    file: ./secrets/inadyn
  ldap_auth:
    file: ./secrets/ldap_auth
  ldap_db:
    file: ./secrets/ldap_db
  maxmind:
    file: ./secrets/maxmind
  nextcloud_db:
    file: ./secrets/nextcloud_db
  protonmail_address:
    file: ./secrets/protonmail_address
  protonmail_password:
    file: ./secrets/protonmail_password
  protonmail_password_bridge:
    file: ./secrets/protonmail_password_bridge
  protonmail_password_mailbox:
    file: ./secrets/protonmail_password_mailbox
  restic:
    file: ./secrets/restic
  teamspeak_db:
    file: ./secrets/teamspeak_db
